server.port=8080
logging.level.root=info

spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.username=user_name
spring.datasource.password=user_pwrd
spring.sql.init.mode=always
spring.jpa.show-sql=false
spring.jpa.open-in-view=true
spring.jpa.hibernate.ddl-auto=none
spring.jpa.defer-datasource-initialization=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

spring.datasource.hikari.connection-timeout=600000
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.validation-timeout=3000
spring.datasource.hikari.idle-timeout=60000

application.OpenStreetMap.server.url=https://tile.openstreetmap.org
#if false - giffMap will not be supported (choose in case of issues with tiff file or with app speed):
application.geofile.provided=true
application.geofile.source.path=input/NE2_50M_SR_W/NE2_50M_SR_W.tif
#x/y correction value limits from -1° to +1°:
application.geofile.data.x.correction=0
application.geofile.data.y.correction=0.034
#path and file name for creating example of source coverage file (optionally):
application.output.folder.path=output/
application.output.geofileEPSG3857.name=coverageEPSG3857.png
